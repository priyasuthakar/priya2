/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M9
 * Generated at: 2016-09-20 11:45:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class blog1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Blog</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!--Angularjs library -->\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.5.7/angular.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://ajax.googleapis.com/ajax/libs/angularjs/1.2.9/angular-animate.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("body,h1,h2,h3,h4,h5 {font-family: \"Raleway\", sans-serif}\r\n");
      out.write("/*\r\n");
      out.write("\r\n");
      out.write("Simple blog front end demo in order to learn AngularJS - You can add new posts, add comments, and like posts.\r\n");
      out.write("\r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write("(function(){\r\n");
      out.write("  var app = angular.module('blogApp',[]);\r\n");
      out.write("  \r\n");
      out.write("  app.controller('BlogController', ['$http', function($http){\r\n");
      out.write("    \r\n");
      out.write("    var blog = this;\r\n");
      out.write("    blog.title = \"AngularJS Blog App\";\r\n");
      out.write("    \r\n");
      out.write("    blog.posts = {};\r\n");
      out.write("    $http.get('https://s3-us-west-2.amazonaws.com/s.cdpn.io/110131/posts_1.json').success(function(data){\r\n");
      out.write("      blog.posts = data;\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    blog.tab = 'blog';\r\n");
      out.write("    \r\n");
      out.write("    blog.selectTab = function(setTab){\r\n");
      out.write("      blog.tab = setTab;\r\n");
      out.write("      console.log(blog.tab)\r\n");
      out.write("    };\r\n");
      out.write("    \r\n");
      out.write("    blog.isSelected = function(checkTab){\r\n");
      out.write("      return blog.tab === checkTab;\r\n");
      out.write("    };\r\n");
      out.write("    \r\n");
      out.write("    blog.post = {};\r\n");
      out.write("    blog.addPost = function(){\r\n");
      out.write("      blog.post.createdOn = Date.now();\r\n");
      out.write("      blog.post.comments = [];\r\n");
      out.write("      blog.post.likes = 0;\r\n");
      out.write("      blog.posts.unshift(this.post);\r\n");
      out.write("      blog.tab = 0;\r\n");
      out.write("      blog.post ={};\r\n");
      out.write("    };   \r\n");
      out.write("    \r\n");
      out.write("  }]);\r\n");
      out.write("  \r\n");
      out.write("  app.controller('CommentController', function(){\r\n");
      out.write("    this.comment = {};\r\n");
      out.write("    this.addComment = function(post){\r\n");
      out.write("      this.comment.createdOn = Date.now();\r\n");
      out.write("      post.comments.push(this.comment);\r\n");
      out.write("      this.comment ={};\r\n");
      out.write("    };\r\n");
      out.write("  });\r\n");
      out.write(" \r\n");
      out.write("})();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("@blue: #79B9D2;\r\n");
      out.write("@accent: darken(@blue,20);\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("  box-sizing:border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("html {\r\n");
      out.write("  font-size:18px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".topbar {\r\n");
      out.write("  background:@blue;\r\n");
      out.write("  color:white;\r\n");
      out.write("  width:100%;\r\n");
      out.write("  z-index:9999;\r\n");
      out.write("  padding:5px 20px;\r\n");
      out.write("  \r\n");
      out.write("  h1 {\r\n");
      out.write("    cursor:pointer;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  nav {\r\n");
      out.write("    margin-top:25px;\r\n");
      out.write("    \r\n");
      out.write("    ul {\r\n");
      out.write("      padding:0;\r\n");
      out.write("      margin:0;\r\n");
      out.write("      \r\n");
      out.write("      li {\r\n");
      out.write("        display:inline-block;\r\n");
      out.write("        padding:10px;\r\n");
      out.write("        \r\n");
      out.write("        a {\r\n");
      out.write("          color:white;\r\n");
      out.write("          text-decoration:none;\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  ul.post-grid {\r\n");
      out.write("    margin:0;\r\n");
      out.write("    padding:0;\r\n");
      out.write("    list-style-type:none;\r\n");
      out.write("    \r\n");
      out.write("    li {\r\n");
      out.write("      padding:20px;\r\n");
      out.write("      cursor:pointer;\r\n");
      out.write("      transition: background linear 0.5s;\r\n");
      out.write("      border-bottom:1px solid @accent;\r\n");
      out.write("      \r\n");
      out.write("      &:hover {\r\n");
      out.write("      background:@accent;\r\n");
      out.write("      color:white;\r\n");
      out.write("      \r\n");
      out.write("        h3 {\r\n");
      out.write("          color: white;\r\n");
      out.write("        }\r\n");
      out.write("       \r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".content {\r\n");
      out.write("  width:100%;\r\n");
      out.write("  position:relative;\r\n");
      out.write("  padding:20px 40px 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" h2, h3 {\r\n");
      out.write("    color: @accent;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write(".post {\r\n");
      out.write("  -webkit-transition:0.5s linear all;\r\n");
      out.write("  transition:0.5s linear all;\r\n");
      out.write("  opacity:1;\r\n");
      out.write("  padding-bottom:30px;\r\n");
      out.write("  \r\n");
      out.write("  cite {\r\n");
      out.write("    display:inline-block;\r\n");
      out.write("    padding:10px 0;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".comments {\r\n");
      out.write("  ul {\r\n");
      out.write("    margin:0;\r\n");
      out.write("    padding:0;\r\n");
      out.write("    li {\r\n");
      out.write("      list-style-type:none;\r\n");
      out.write("      padding:20px 5px;\r\n");
      out.write("      border-bottom:1px @blue solid;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".post.ng-hide {\r\n");
      out.write("  opacity:0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".post.ng-hide-add, .post.ng-hide-remove {\r\n");
      out.write("  display:block!important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form {\r\n");
      out.write("  width:100%;\r\n");
      out.write("}\r\n");
      out.write("input, textarea {\r\n");
      out.write("  display:block;\r\n");
      out.write("  width:100%;\r\n");
      out.write("  padding:10px;\r\n");
      out.write("  font-size:1.1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ng-invalid.ng-dirty {\r\n");
      out.write("  border-color:red;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".ng-valid.ng-dirty {\r\n");
      out.write("  border-color:green;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("img {\r\n");
      out.write("  max-width:100%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body ng-app=\"blogApp\">\r\n");
      out.write("  \r\n");
      out.write("  <div ng-controller=\"BlogController as blog\">\r\n");
      out.write("      <div class=\"topbar\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("          <div class=\"row\">\r\n");
      out.write("            <div class=\"col-s-4\">\r\n");
      out.write("              <h1 ng-click=\"blog.selectTab('blog')\" class=\"push-left\">{{blog.title}}</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"offset-s-4 col-s-4\">\r\n");
      out.write("              <nav role='navigation' class=\"push-right\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                  <li><a href=\"#\" ng-click=\"blog.selectTab('blog')\">See All Posts</a></li>\r\n");
      out.write("                  <li><a href=\"#\" ng-click=\"blog.selectTab('new')\">Add New Post</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("              </nav> \r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("         \r\n");
      out.write("      </div>\r\n");
      out.write("     \r\n");
      out.write("      \r\n");
      out.write("      <div class=\"content\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("          <div class=\"row\">\r\n");
      out.write("            <ul class=\"post-grid\" ng-show=\"blog.isSelected('blog')\">\r\n");
      out.write("          <li ng-repeat=\"post in blog.posts\" class=\"col-s-4\" ng-class=\"{ 'reset-s' : $index%3==0 }\" ng-click=\"blog.selectTab($index)\" >\r\n");
      out.write("            <h3>{{post.title}}</h3>\r\n");
      out.write("            <p>{{post.body[0] | limitTo:70}}...</p>\r\n");
      out.write("            <p class=\"fa fa-comment push-left\"> {{post.comments.length}}\r\n");
      out.write("            </p>\r\n");
      out.write("            <p class=\"fa fa-heart push-right\"> {{post.likes}}\r\n");
      out.write("            </p>\r\n");
      out.write("          </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <div class=\"post\" ng-repeat=\"post in blog.posts\" ng-show=\"blog.isSelected($index)\">\r\n");
      out.write("          <div>\r\n");
      out.write("            \r\n");
      out.write("            <h2>{{post.title}}</h2>\r\n");
      out.write("            <img src=\"{{post.image}}\" ng-show=\"{{post.image}}\"/>\r\n");
      out.write("            <cite>by {{post.author}} on {{post.createdOn | date}}</cite>\r\n");
      out.write("            <div class=\"post-body\">\r\n");
      out.write("             <p ng-repeat=\"paragraph in post.body\">\r\n");
      out.write("               {{paragraph}}\r\n");
      out.write("             </p> \r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"comments\" ng-controller=\"CommentController as commentCtrl\">\r\n");
      out.write("              <button class=\"fa fa-heart\" ng-click=\"post.likes = post.likes+1\"> {{post.likes}}</button>\r\n");
      out.write("              <h3>Comments</h3>\r\n");
      out.write("              <ul>\r\n");
      out.write("               <li ng-repeat=\"comment in post.comments\">\r\n");
      out.write("                 \"{{comment.body}}\"\r\n");
      out.write("                 <cite>- <b>{{comment.author}}</b></cite>\r\n");
      out.write("               </li>\r\n");
      out.write("              </ul>\r\n");
      out.write("              <form name=\"commentForm\" ng-submit=\"commentForm.$valid && commentCtrl.addComment(post)\" novalidate>\r\n");
      out.write("              \r\n");
      out.write("                \r\n");
      out.write("                <h4>Add Comment</h4>\r\n");
      out.write("                  <textarea ng-model=\"commentCtrl.comment.body\" cols=\"30\" rows=\"10\" required></textarea>\r\n");
      out.write("                <label for=\"\">by:</label>\r\n");
      out.write("                  <input type=\"text\" ng-model=\"commentCtrl.comment.author\" required placeholder=\"Name\"/>\r\n");
      out.write("                  \r\n");
      out.write("                  <input type=\"submit\" value=\"Submit\" />\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("        <div class=\"post\" ng-show=\"blog.isSelected('new')\">\r\n");
      out.write("          <h2>Add New Post</h2>\r\n");
      out.write("          \r\n");
      out.write("          <form name=\"postForm\" ng-submit=\" blog.addPost()\" novalidate>\r\n");
      out.write("                  <h4>Title</h4>\r\n");
      out.write("                  <input type=\"text\" ng-model=\"blog.post.title\"/>\r\n");
      out.write("                  <h4>Body</h4>\r\n");
      out.write("                  <textarea ng-model=\"blog.post.body\" ng-list=\"/\\n/\" rows=\"10\"></textarea>\r\n");
      out.write("                  <label for=\"\">Featured Image URL</label>\r\n");
      out.write("                  <input type=\"text\" ng-model=\"blog.post.image\" placeholder=\"http://placekitten.com/g/2000/600\" />\r\n");
      out.write("                  <label for=\"\">by:</label>\r\n");
      out.write("                  <input type=\"text\" ng-model=\"blog.post.author\" placeholder=\"Author Name\" required/>           \r\n");
      out.write("                  <input type=\"submit\" value=\"Submit\" />\r\n");
      out.write("               </form>\r\n");
      out.write("          \r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
